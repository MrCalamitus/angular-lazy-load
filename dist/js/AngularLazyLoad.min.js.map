{"version":3,"file":"AngularLazyLoad.min.js","sources":["../../src/js/LodashShim.js","../../src/js/Main.js","../../src/js/ScrollTo.js","../../src/js/LazyLoadConfigProvider.js","../../src/js/AngularLazyLoad.js"],"sourcesContent":["if (!window._) {\n  window._ = {\n    throttle: function(fn, threshhold, scope) {\n      threshhold || (threshhold = 250);\n      var last, deferTimer;\n      return function () {\n        var context = scope || this;\n        var now = +new Date,\n            args = arguments;\n        if (last && now < last + threshhold) {\n          clearTimeout(deferTimer);\n          deferTimer = setTimeout(function () {\n            last = now;\n            fn.apply(context, args);\n          }, threshhold + last - now);\n        } else {\n          last = now;\n          fn.apply(context, args);\n        }\n      }\n    }\n  }\n}\n\nexport default window._;","import ScrollTo from './ScrollTo.js';\nimport LazyLoadProvider from './LazyLoadConfigProvider.js';\nimport AngularLazyLoad from './AngularLazyLoad.js';\n\nangular.module('angular-lazy-load', [])\n  .directive('scrollTo', ScrollTo)\n  .provider('lazyLoad', LazyLoadProvider)\n  .directive('lazyLoad', AngularLazyLoad);","import _ from './LodashShim.js';\n\nlet ScrollTo = ['$window', '$timeout', 'lazyLoad', ($window, $timeout, lazyLoad) => {\n  let defaults = {\n    intersectionThreshold: 0.1,\n    throttleWait: 20,\n    unobserveInstantly: true,\n    useIntersectionObserver: true,\n    intersectionRoot: null,\n    intersectionRootMargin: \"0px\",\n    scrollOffset: lazyLoad.scrollOffset\n  };\n  return {\n    restrict: 'A',\n    link(scope, element, attrs) {\n      let fn = scope.$eval(attrs.scrollTo);\n      let attrOptions = {\n        intersectionRatio: scope.$eval(attrs.scrollToThreshold),\n        throttleWait: scope.$eval(attrs.scrollToThrottle),\n        unobserveInstantly: scope.$eval(attrs.scrollToUnobserve),\n        intersectionRoot: scope.$eval(attrs.scrollToRoot),\n        intersectionRootMargin: scope.$eval(attrs.scrollToRootMargin),\n        scrollOffset: scope.$eval(attrs.scrollOffset),\n        useIntersectionObserver: scope.$eval(attrs.useIo)\n      };\n      let options = defaults;\n      for (let k in attrOptions) {\n        let v = attrOptions[k];\n        if (v != null) { options[k] = v; }\n      }\n      if (options.useIntersectionObserver &&\n        (typeof IntersectionObserver !== 'undefined')) {\n        let rootMargin = \"0px\";\n        if (options.scrollOffset != null) {\n          if (options.intersectionRootMargin) {\n            let parts = options.intersectionRootMargin.split(\" \").splice(0, 1);\n            parts = parts.concat([`${options.scrollOffset}px`]);\n            rootMargin = parts.join(\" \");\n          } else {\n            rootMargin = `0px 0px 0px ${options.scrollOffset}px`;\n          }\n        }\n        var io = new IntersectionObserver(function(entries) {\n          if (entries[0].intersectionRatio == 0) { return; }\n          scope.$apply(fn);\n          if (options.unobserveInstantly) {\n            return io.unobserve(element[0]);\n          }\n          }, {\n          root: options.intersectionRoot,\n          rootMargin: options.intersectionRootMargin,\n          threshold: options.intersectionThreshold\n          });\n        return io.observe(element[0]);\n      } else {\n        let scrollOffset = options.scrollOffset || 0;\n        let scrollHandler = _.throttle(function(e) {\n          let docViewTop = $window.scrollY;\n          let docViewBottom = docViewTop + $window.innerHeight;\n          let elemTop = element[0].offsetTop;\n          let elemBottom = elemTop + element[0].offsetHeight;\n          if ((elemBottom <= docViewBottom + scrollOffset) && (elemTop >= docViewTop - scrollOffset)) {\n            scope.$apply(fn);\n            if (options.unobserveInstantly) {\n              return $window.removeEventListener('scroll', scrollHandler);\n            }\n          }\n        }\n        , options.throttleWait\n        );\n        $window.addEventListener('scroll', scrollHandler);\n        return $timeout(scrollHandler);\n      }\n    }\n  };\n}];\n\nexport default ScrollTo;","let LazyLoadProvider = function() {\n  this.scrollOffset = null;\n  this.setScrollOffset = function(newScrollOffset) {\n    this.scrollOffset = newScrollOffset;\n  };\n  this.$get = function() {\n    return this;\n  };\n};\n\nexport default LazyLoadProvider;","let AngularLazyLoad = ['lazyLoad', (lazyLoad) => {\n  return {\n    restrict: 'A',\n    controller: ['$element', function($element) {\n      this.scrollOffset = lazyLoad.scrollOffset;\n      this.aot = $element.attr('aot') || false;\n      this.scrollHandler = (e) => {\n        if ($element.attr('lazy-src')) {\n          $element.attr('src', $element.attr('lazy-src'));\n          $element.removeAttr('lazy-src');\n        }\n        if ($element.attr('use-io')) {\n          $element.removeAttr('use-io');\n        }\n      }\n    }],\n    controllerAs: 'll',\n    template: \"<img scroll-to='ll.scrollHandler' use-io='!ll.aot' />\",\n    replace: true,\n    priority: 50\n  }\n}];\n\nexport default AngularLazyLoad;"],"names":["window","throttle","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","setTimeout","angular","ScrollTo","$window","$timeout","lazyLoad","defaults","element","attrs","attrOptions","k","v","options","IntersectionObserver","parts","io","entries","scrollOffset","scrollHandler","_","e","docViewTop","elemTop","LazyLoadProvider","this.setScrollOffset","newScrollOffset","this.$get","AngularLazyLoad","$element","this.scrollHandler"],"mappings":"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"}